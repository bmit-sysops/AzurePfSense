{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "parameters": {
        "adminUsername": {
            "defaultValue": "localadmin",
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machine. Default value is localadmin"
            }
        },
        "adminPassword": {
            "defaultValue": "[concat('Subscription#',substring(resourcegroup().id,15,36))]",
            "type": "SecureString",
            "metadata": {
                "description": "Password for the Virtual Machine. Default value is 'Subscription#<subscription id>'"
            }
        },
        "imagePublisher": {
            "defaultValue": "Canonical",
            "type": "String",
            "metadata": {
                "description": "Maps to the publisher in the Azure Stack Platform Image Repository manifest file Eg: Canonical, Suse, OpenLogic "
            }
        },
        "imageOffer": {
            "defaultValue": "UbuntuServer",
            "type": "String",
            "metadata": {
                "description": "Maps to the Offer in the Azure Stack Platform Image Repository manifest file Eg: UbuntuServer, SlesServer, CentOS "
            }
        },
        "imageSku": {
            "defaultValue": "16.04-LTS",
            "type": "String",
            "metadata": {
                "description": "Maps to the sku in the Azure Stack Platform Image Repository manifest file Eg: 12.SP1, 6.7 , 7.2"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_A1",
            "type": "String",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "vNetName": {
            "type": "String",
            "metadata": {
                "description": "The name for the virtual network"
            }
        },
        "vNetAddressPrefix": {
            "type": "String",
            "metadata": {
                "description": "The address prefix for the virtual network"
            }
        },
        "gatewaySubnetName": {
            "defaultValue": "gatewaysubnet",
            "type": "String",
            "metadata": {
                "description": "The name of the gateway subnet (must be set to gatewaysubnet)"
            }
        },
        "gatewaySubnetAddressPrefix": {
            "type": "String",
            "metadata": {
                "description": "The address prefix of the gateway subnet (e.g.: 10.0.0.0/27)"
            }
        },
        "frontEndSubnetName": {
            "type": "String",
            "metadata": {
                "description": "The name of the front-end subnet"
            }
        },
        "frontEndSubnetAddressPrefix": {
            "type": "String",
            "metadata": {
                "description": "The address prefix of the front-end subnet"
            }
        },
        "backEndSubnetName": {
            "type": "String",
            "metadata": {
                "description": "The name of the back-end subnet"
            }
        },
        "backEndSubnetAddressPrefix": {
            "type": "String",
            "metadata": {
                "description": "The address prefix of the back-end subnet"
            }
        },
        "frontEndNicName": {
            "type": "String",
            "metadata": {
                "description": "Name for the front-end NIC"
            }
        },
        "backEndNicName": {
            "type": "String",
            "metadata": {
                "description": "Name for the back-end NIC"
            }
        },
        "frontEndIp": {
            "type": "String",
            "metadata": {
                "description": "IP for the front-end NIC"
            }
        },
        "backEndIp": {
            "type": "String",
            "metadata": {
                "description": "IP for the back-end NIC"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "OSDiskName": "osdisk",
        "storageAccountName": "[concat('sa', uniquestring(resourceGroup().id))]",
        "storageAccountType": "Standard_LRS",
        "vmStorageAccountContainerName": "vhds",
        "vmName": "[substring(concat('pfsense-',resourceGroup().Name),0,12)]",
        "networkSecurityGroupName": "[tolower(concat('nsg',uniquestring(resourceGroup().id)))]",
        "vNetSubnets": [
            {
                "name": "[parameters('gatewaySubnetName')]",
                "properties": {
                    "addressPrefix": "[parameters('gatewaySubnetAddressPrefix')]"
                }
            },
            {
                "name": "[parameters('frontEndSubnetName')]",
                "properties": {
                    "addressPrefix": "[parameters('frontEndSubnetAddressPrefix')]"
                }
            },
            {
                "name": "[parameters('backEndSubnetName')]",
                "properties": {
                    "addressPrefix": "[parameters('backEndSubnetAddressPrefix')]"
                }
            }
        ],
        "frontEndSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'),parameters('frontEndSubnetName'))]",
        "backEndSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'),parameters('backEndSubnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "name": "[toLower(variables('storageAccountName'))]",
            "location": "[variables('location')]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vNetName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vNetAddressPrefix')]"
                    ]
                },
                "subnets": "[variables('vNetSubnets')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('backEndNicName')]",
            "location": "[variables('location')]",
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('backEndIp')]",
                            "subnet": {
                                "id": "[variables('backEndSubnetRef')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('frontEndNicName')]",
            "location": "[variables('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('frontEndIp')]",
                            "subnet": {
                                "id": "[variables('frontEndSubnetRef')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[variables('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/', variables('OSDiskName'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('frontEndNicName'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('backEndNicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', parameters('frontEndNicName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', parameters('backEndNicName'))]"
            ]
        }
    ]
}